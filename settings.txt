{
	"PayInternalService": {
        "AutoSettle": {
            "AssetsToMakePartialAutoSettle": ${PayInternalService-AutoSettle-AssetsToMakePartialAutoSettle}:[JsonArray,Tag],
            "AssetsToSettleToMerchantWallet": ${PayInternalService-AutoSettle-AssetsToSettleToMerchantWallet}:[JsonArray,Tag],
            "BitcoinAutoSettleWalletAddress": "${PayInternalService-AutoSettle-BitcoinAutoSettleWalletAddress}:[Tag]",
            "EthereumAutoSettleWalletAddress": "${PayInternalService-AutoSettle-EthereumAutoSettleWalletAddress}:[Tag]"
        },
		"Db": {
			"LogsConnString": "${LogsConnString}:[AzureTableStorage]",
			"MerchantWalletConnString": "${MerchantConnString}:[AzureTableStorage]",
			"MerchantOrderConnString": "${MerchantConnString}:[AzureTableStorage]",
			"MerchantConnString": "${MerchantConnString}:[AzureTableStorage]",
			"PaymentRequestConnString": "${MerchantConnString}:[AzureTableStorage]",
			"TransferConnString": "${MerchantConnString}:[AzureTableStorage]"
		},
		"LpMarkup": {
			"Percent": 1.5,
			"Pips": 20
		},
		"Rabbit": {
			"ConnectionString": "${GeneralRabbitMqConnectionString}:[RabbitMq]",
			"WalletsExchangeName": "pay.wallets",
			"PaymentRequestsExchangeName": "pay.paymentrequests",
			"TransactionUpdatesExchangeName": "pay.transactionevents",
			"TansferRequestsExchangeName": "pay.transferrequests"
		},
		"ExpirationPeriods": {
			"Order": {
				"Primary": "00:02:00",
				"Extended": "00:05:00"
			},
			"Refund": "1.00:00:00",
			"WalletExtra": "1.00:00:00",
			"AssetsCache": "1.00:00:00"
		},
		"JobPeriods": {
			"PaymentRequestExpirationHandling": "00:01:00"
		},
		"DataEncriptionPassword": "DataEncriptionPassword",
		"TransactionConfirmationCount": 3,
		"Blockchain": {
			"WalletAllocationPolicy": {
				"Policies": [{
					"Blockchain": "Bitcoin",
					"WalletAllocationPolicy": "New"
				},{
					"Blockchain": "Ethereum",
					"WalletAllocationPolicy": "New"
				}]
			},
			"Ethereum": {
				"ApiKey": "default",
				"BlockchainExplorer": {
					"TransactionUrl": "https://ropsten.etherscan.io/tx"
				},
				"ExchangeHotWalletAddress": "0xcce0bbf39f359e91d9692d7f25735462b961f3b2",
				"CashoutHotWalletAddress": "0xd44df69a085309580c190b2348723a7d5ca1992e"
			},
			"Bitcoin": {
				"Network": "TestNet",
				"BlockchainExplorer": {
					"TransactionUrl": "https://private-bcn-explorer-dev.lykkex.net/transaction"
				},
				"ExchangeHotWalletAddress": "",
				"CashoutHotWalletAddress": ""
			}
		},
		"AssetPairsLocalStorage": {
			"AssetPairs": [{
				"BaseAssetId": "IATAEURT2",
				"QuotingAssetId": "IATAUSDT2",
				"Accuracy": 3
			},{
				"BaseAssetId": "IATAUSDT2",
				"QuotingAssetId": "IATAEURT2",
				"Accuracy": 3
			}]
		},
		"CacheSettings": {
			"RedisConfiguration": "${RedisConfiguration}",
			"PaymentLocksCacheKeyPattern": "PayInternal:paymentRequests:paymentLock:{0}",
			"CheckoutLocksCacheKeyPattern": "PayInternal:paymentRequests:checkoutLock:{0}"
		},
		"Merchant": {
			"LogoSize": "256"
		},
		"RetryPolicy": {
			"DefaultAttempts": 5,
			"SettlementAttempts": 10
		}
	},
	"AssetsMap": 
    {
        "Values": ${LykkePay-AssetsMap-Values}:[Json],
        "InvoiceCreationPairs": ${LykkePay-AssetsMap-InvoiceCreationPairs}:[Json]
    },
	"AssetsServiceClient": {
		"ServiceUrl": "${AssetsServiceUrl}",
		"ExpirationPeriod": "${AssetsServiceExpirationPeriod}"
	},
	"BitCoinCore": {
		"BitcoinCoreApiUrl": "${BitcoinApiServiceUrl}"
	},
	"EthereumServiceClient": {
		"ServiceUrl": "${EthereumApiServiceUrl}",
		"HotwalletAddress": "${EthereumApiHotwalletAddress}"
	},
	"MarketProfileServiceClient": {
		"ServiceUrl": "${MarketProfileServiceUrl}"
	},
	"NinjaServiceClient": {
		"ServiceUrl": "${NinjaServiceUrl}"
	},
	"PayHistoryServiceClient": {
		"ServiceUrl": "${PayHistoryServiceUrl}"
	},
	"PayHistoryServicePublisher": {
		"ConnectionString": "${GeneralRabbitMqConnectionString}:[RabbitMq]",
		"ExchangeName": "${PayHistoryExchangeName}"
	},
	"PayInvoiceConfirmationPublisher": {
		"ConnectionString": "${GeneralRabbitMqConnectionString}:[RabbitMq]",
		"ExchangeName": "${PayInvoiceConfirmationExchangeName}"
	},
	"SlackNotifications": {
		"AzureQueue": {
			"ConnectionString": "${SlackNotificationsConnString}:[AzureTableStorage]",
			"QueueName": "slack-notifications"
		},
		"ThrottlingLimitSeconds": ${SlackNotificationsThrottlingLimit}
	},
	"MonitoringServiceClient": 
	{
		"MonitoringServiceUrl": "${MonitoringServiceUrl}"
	}
}